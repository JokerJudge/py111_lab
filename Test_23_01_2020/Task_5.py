'''
Задача консенсуса DNA ридов
При чтении DNA последовательностей могут возникать единичные ошибки,
выражающиеся в неверной букве в строке. Для решения данной проблемы требуемое место читается
несколько раз, после чего строится консенсус-строка, в которой на каждом месте будет стоять
тот символ, что чаще всего встречался в этом месте суммарно во всех чтениях. Т.е. для строк
ATTA
ACTA
AGCA
ACAA
консенсус-строка будет ACTA (в первой ячейке чаще всего встречалась A, во второй – C, в третьей – Т, в четвертой – снова А).
Для входного списка из N строк одинаковой длины построить консенсус-строку
'''

def consens(N):
    """

    :param N: список строк одинаковой длины
    :return: консенсус-строка
    """

    #print(N[0])
    temp_str = ""
    temp_str_2 = ""
    cons_string = ""
    index = 0

    for i in range(len(N[0])): # количество символов в строке
        for j in N: # проход по каждой строке
            temp_str += j[index] # добавляем во временную строку символ необходимого индекса
        #print(temp_str)
        d = {}
        for i in temp_str: # подсчет количества одинаковых символов по одному индексу
            d[i] = temp_str.count(i)
        #print(d)
        max_res = 0
        for k, v in d.items():
            if v > max_res:
                max_res = v
                temp_str_2 += k
        cons_string += temp_str_2[-1] # последний добавленный символ в цикле j - самый часто встречающийся символ по конкретному индексу
        temp_str = ""
        #print(cons_string)
        index += 1

    return cons_string


if __name__ == "__main__":
    N = ["ATTA", "ACTA", "AGCA", "ACAA"]

    print("Консенсус-строка: ", consens(N))
